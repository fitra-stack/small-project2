{"ast":null,"code":"import productLists from \"../pages/data\";\nconst initialState = {\n  products: productLists,\n  product: [{\n    productId: 0,\n    productDesc: \"\",\n    productPrice: \"\",\n    productName: \"\",\n    productMaterial: \"\"\n  }],\n  basket: [],\n  total: 0\n};\n\nconst productReducer = (state = initialState, action) => {\n  if (action.type === 'ADD_ITEM') {\n    let allItems = JSON.parse(localStorage.getItem('items'));\n    console.log(state.total, \"allitemss\"); //console.log(\"action\", action.product.productId)\n\n    let addedItem = state.products.find(item => item.productId === action.product.productId);\n    let existed_item = allItems.find(item => item.productId === action.product.productId);\n\n    if (existed_item) {\n      console.log(\"ada\");\n      addedItem.quantity += 1;\n      return { ...state,\n        total: state.total + addedItem.productPrice\n      };\n    } else {\n      console.log(\"g ada item\");\n      addedItem.quantity = 1; //calculating the total\n\n      let newTotal = state.total + addedItem.productPrice;\n      return { ...state,\n        basket: [...state.basket, addedItem],\n        total: newTotal\n      };\n    } // return {\n    //     ...state,\n    //     basket: [ ...state.basket, action.product\n    //     ]\n    // }\n\n  }\n\n  if (action.type === 'DEL_ITEM') {\n    let allItems = JSON.parse(localStorage.getItem('items'));\n    let totalItems = JSON.parse(localStorage.getItem('totalItems'));\n    let itemToRemove = allItems.find(item => action.productId === item.productId);\n    let newItems = allItems.filter(item => action.productId !== item.productId);\n    let updateItems = localStorage.setItem('items', JSON.stringify(newItems));\n    let newTotal = totalItems - itemToRemove.productPrice * itemToRemove.quantity;\n    let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal));\n    return { ...state,\n      basket: newItems,\n      total: newTotal\n    };\n  }\n\n  if (action.type === 'ADD_QUANTITY') {\n    let allItems = JSON.parse(localStorage.getItem('items'));\n    let totalItems = JSON.parse(localStorage.getItem('totalItems'));\n    let addedItem = allItems.find(item => item.productId === action.productId);\n    addedItem.quantity += 1;\n    let qtyUpdate = Array(addedItem);\n    let updateItems = allItems.map(obj => qtyUpdate.find(o => o.productId === obj.productId) || obj);\n    let localstorageItems = localStorage.setItem('items', JSON.stringify(updateItems));\n    let newTotal = totalItems + addedItem.productPrice;\n    let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal));\n    return { ...state,\n      total: newTotal\n    };\n  }\n\n  if (action.type === 'SUB_QUANTITY') {\n    let allItems = JSON.parse(localStorage.getItem('items'));\n    let addedItem = allItems.find(item => item.productId === action.productId);\n    let totalItems = JSON.parse(localStorage.getItem('totalItems')); //if the qt == 0 then it should be removed\n\n    if (addedItem.quantity === 1) {\n      let newItems = allItems.filter(item => item.productId !== action.productId);\n      let newTotal = totalItems - addedItem.productPrice;\n      let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal));\n      return { ...state,\n        addedItems: newItems,\n        total: newTotal\n      };\n    } else {\n      addedItem.quantity -= 1;\n      let newTotal = stotalItems - addedItem.productPrice;\n      let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal));\n      return { ...state,\n        total: newTotal\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default productReducer;","map":{"version":3,"sources":["/Users/firdausmac/Documents/FULLSTACK/CARI GITHUB/small-project2/src/reducers/productReducer.js"],"names":["productLists","initialState","products","product","productId","productDesc","productPrice","productName","productMaterial","basket","total","productReducer","state","action","type","allItems","JSON","parse","localStorage","getItem","console","log","addedItem","find","item","existed_item","quantity","newTotal","totalItems","itemToRemove","newItems","filter","updateItems","setItem","stringify","updateTotal","qtyUpdate","Array","map","obj","o","localstorageItems","addedItems","stotalItems"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,eAAzB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAEF,YADO;AAEjBG,EAAAA,OAAO,EAAC,CAAC;AACLC,IAAAA,SAAS,EAAG,CADP;AAELC,IAAAA,WAAW,EAAG,EAFT;AAGLC,IAAAA,YAAY,EAAG,EAHV;AAILC,IAAAA,WAAW,EAAG,EAJT;AAKLC,IAAAA,eAAe,EAAG;AALb,GAAD,CAFS;AASjBC,EAAAA,MAAM,EAAC,EATU;AAUjBC,EAAAA,KAAK,EAAG;AAVS,CAArB;;AAaA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AACrD,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EACA;AACE,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACF,KAAlB,EAAyB,WAAzB,EAFF,CAGE;;AACA,QAAIY,SAAS,GAAGV,KAAK,CAACV,QAAN,CAAeqB,IAAf,CAAoBC,IAAI,IAAGA,IAAI,CAACpB,SAAL,KAAmBS,MAAM,CAACV,OAAP,CAAeC,SAA7D,CAAhB;AACA,QAAIqB,YAAY,GAAEV,QAAQ,CAACQ,IAAT,CAAcC,IAAI,IAAIA,IAAI,CAACpB,SAAL,KAAmBS,MAAM,CAACV,OAAP,CAAeC,SAAxD,CAAlB;;AAEA,QAAGqB,YAAH,EACG;AACEL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACCC,MAAAA,SAAS,CAACI,QAAV,IAAsB,CAAtB;AACC,aAAM,EACH,GAAGd,KADA;AAEFF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcY,SAAS,CAAChB;AAF7B,OAAN;AAIJ,KARH,MASO;AACFc,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACCC,MAAAA,SAAS,CAACI,QAAV,GAAqB,CAArB,CAFC,CAGD;;AACA,UAAIC,QAAQ,GAAGf,KAAK,CAACF,KAAN,GAAcY,SAAS,CAAChB,YAAvC;AAEA,aAAM,EACF,GAAGM,KADD;AAEFH,QAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkBa,SAAlB,CAFN;AAGFZ,QAAAA,KAAK,EAAGiB;AAHN,OAAN;AAMH,KA5BL,CA6BE;AACA;AACA;AACA;AACA;;AACD;;AACD,MAAId,MAAM,CAACC,IAAP,KAAgB,UAApB,EACA;AACI,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAf;AACA,QAAIS,UAAU,GAAGZ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAjB;AACA,QAAIU,YAAY,GAAEd,QAAQ,CAACQ,IAAT,CAAcC,IAAI,IAAGX,MAAM,CAACT,SAAP,KAAqBoB,IAAI,CAACpB,SAA/C,CAAlB;AACA,QAAI0B,QAAQ,GAAGf,QAAQ,CAACgB,MAAT,CAAgBP,IAAI,IAAGX,MAAM,CAACT,SAAP,KAAqBoB,IAAI,CAACpB,SAAjD,CAAf;AAEA,QAAI4B,WAAW,GAAGd,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BjB,IAAI,CAACkB,SAAL,CAAeJ,QAAf,CAA9B,CAAlB;AAEA,QAAIH,QAAQ,GAAGC,UAAU,GAAIC,YAAY,CAACvB,YAAb,GAA4BuB,YAAY,CAACH,QAAtE;AACA,QAAIS,WAAW,GAAGjB,YAAY,CAACe,OAAb,CAAqB,YAArB,EAAmCjB,IAAI,CAACkB,SAAL,CAAeP,QAAf,CAAnC,CAAlB;AAEA,WAAM,EACJ,GAAGf,KADC;AAEJH,MAAAA,MAAM,EAAEqB,QAFJ;AAGJpB,MAAAA,KAAK,EAAEiB;AAHH,KAAN;AAKH;;AACD,MAAGd,MAAM,CAACC,IAAP,KAAgB,cAAnB,EACA;AACI,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAf;AACA,QAAIS,UAAU,GAAGZ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAjB;AACA,QAAIG,SAAS,GAAGP,QAAQ,CAACQ,IAAT,CAAcC,IAAI,IAAGA,IAAI,CAACpB,SAAL,KAAmBS,MAAM,CAACT,SAA/C,CAAhB;AACEkB,IAAAA,SAAS,CAACI,QAAV,IAAsB,CAAtB;AAEF,QAAIU,SAAS,GAAGC,KAAK,CAACf,SAAD,CAArB;AACA,QAAIU,WAAW,GAAGjB,QAAQ,CAACuB,GAAT,CAAaC,GAAG,IAAIH,SAAS,CAACb,IAAV,CAAeiB,CAAC,IAAIA,CAAC,CAACpC,SAAF,KAAgBmC,GAAG,CAACnC,SAAxC,KAAsDmC,GAA1E,CAAlB;AACA,QAAIE,iBAAiB,GAAGvB,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BjB,IAAI,CAACkB,SAAL,CAAeF,WAAf,CAA9B,CAAxB;AAEA,QAAIL,QAAQ,GAAGC,UAAU,GAAGN,SAAS,CAAChB,YAAtC;AACA,QAAI6B,WAAW,GAAGjB,YAAY,CAACe,OAAb,CAAqB,YAArB,EAAmCjB,IAAI,CAACkB,SAAL,CAAeP,QAAf,CAAnC,CAAlB;AAEE,WAAM,EACF,GAAGf,KADD;AAEFF,MAAAA,KAAK,EAAEiB;AAFL,KAAN;AAIL;;AACD,MAAGd,MAAM,CAACC,IAAP,KAAe,cAAlB,EAAiC;AAC/B,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAf;AACA,QAAIG,SAAS,GAAGP,QAAQ,CAACQ,IAAT,CAAcC,IAAI,IAAGA,IAAI,CAACpB,SAAL,KAAmBS,MAAM,CAACT,SAA/C,CAAhB;AAEA,QAAIwB,UAAU,GAAGZ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAjB,CAJ+B,CAK/B;;AACA,QAAGG,SAAS,CAACI,QAAV,KAAuB,CAA1B,EAA4B;AACxB,UAAII,QAAQ,GAAGf,QAAQ,CAACgB,MAAT,CAAgBP,IAAI,IAAEA,IAAI,CAACpB,SAAL,KAAmBS,MAAM,CAACT,SAAhD,CAAf;AAGA,UAAIuB,QAAQ,GAAGC,UAAU,GAAGN,SAAS,CAAChB,YAAtC;AACA,UAAI6B,WAAW,GAAGjB,YAAY,CAACe,OAAb,CAAqB,YAArB,EAAmCjB,IAAI,CAACkB,SAAL,CAAeP,QAAf,CAAnC,CAAlB;AACA,aAAM,EACF,GAAGf,KADD;AAEF8B,QAAAA,UAAU,EAAEZ,QAFV;AAGFpB,QAAAA,KAAK,EAAEiB;AAHL,OAAN;AAKH,KAXD,MAYK;AACDL,MAAAA,SAAS,CAACI,QAAV,IAAsB,CAAtB;AACA,UAAIC,QAAQ,GAAGgB,WAAW,GAAGrB,SAAS,CAAChB,YAAvC;AACA,UAAI6B,WAAW,GAAGjB,YAAY,CAACe,OAAb,CAAqB,YAArB,EAAmCjB,IAAI,CAACkB,SAAL,CAAeP,QAAf,CAAnC,CAAlB;AAEA,aAAM,EACF,GAAGf,KADD;AAEFF,QAAAA,KAAK,EAAEiB;AAFL,OAAN;AAIH;AAEJ;;AACC,SAAOf,KAAP;AACH,CAzGD;;AA2GA,eAAeD,cAAf","sourcesContent":["import productLists from \"../pages/data\"\n\nconst initialState = {\n    products: productLists,\n    product:[{\n        productId : 0,\n        productDesc : \"\",\n        productPrice : \"\",\n        productName : \"\",\n        productMaterial : \"\",\n    }],\n    basket:[],\n    total : 0,\n  }\n\nconst productReducer = (state = initialState, action) => {\n    if (action.type === 'ADD_ITEM') \n    {\n      let allItems = JSON.parse(localStorage.getItem('items'))\n      console.log(state.total, \"allitemss\")\n      //console.log(\"action\", action.product.productId)\n      let addedItem = state.products.find(item=> item.productId === action.product.productId)\n      let existed_item= allItems.find(item => item.productId === action.product.productId) \n\n      if(existed_item)\n         {\n           console.log(\"ada\")\n            addedItem.quantity += 1 \n             return{\n                ...state,\n                 total: state.total + addedItem.productPrice \n                  }\n        }\n         else{\n           console.log(\"g ada item\")\n            addedItem.quantity = 1;\n            //calculating the total\n            let newTotal = state.total + addedItem.productPrice \n            \n            return{\n                ...state,\n                basket: [...state.basket, addedItem],\n                total : newTotal\n            }\n            \n        }\n      // return {\n      //     ...state,\n      //     basket: [ ...state.basket, action.product\n      //     ]\n      // }\n    }\n    if (action.type === 'DEL_ITEM') \n    {\n        let allItems = JSON.parse(localStorage.getItem('items'))\n        let totalItems = JSON.parse(localStorage.getItem('totalItems'))\n        let itemToRemove= allItems.find(item=> action.productId === item.productId)\n        let newItems = allItems.filter(item=> action.productId !== item.productId)\n\n        let updateItems = localStorage.setItem('items', JSON.stringify(newItems)) ;\n\n        let newTotal = totalItems - (itemToRemove.productPrice * itemToRemove.quantity )\n        let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal)) ;\n        \n        return{\n          ...state,\n          basket: newItems,\n          total: newTotal\n      }\n    }\n    if(action.type === 'ADD_QUANTITY')\n    { \n        let allItems = JSON.parse(localStorage.getItem('items'))\n        let totalItems = JSON.parse(localStorage.getItem('totalItems'))\n        let addedItem = allItems.find(item=> item.productId === action.productId)\n          addedItem.quantity += 1 \n\n        let qtyUpdate = Array(addedItem)\n        let updateItems = allItems.map(obj => qtyUpdate.find(o => o.productId === obj.productId) || obj); \n        let localstorageItems = localStorage.setItem('items', JSON.stringify(updateItems)) ;\n          \n        let newTotal = totalItems + addedItem.productPrice\n        let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal)) ;\n          \n          return{\n              ...state,\n              total: newTotal\n          }\n    }\n    if(action.type=== 'SUB_QUANTITY'){  \n      let allItems = JSON.parse(localStorage.getItem('items'))\n      let addedItem = allItems.find(item=> item.productId === action.productId)\n\n      let totalItems = JSON.parse(localStorage.getItem('totalItems'))\n      //if the qt == 0 then it should be removed\n      if(addedItem.quantity === 1){\n          let newItems = allItems.filter(item=>item.productId !== action.productId)\n          \n\n          let newTotal = totalItems - addedItem.productPrice\n          let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal)) ;\n          return{\n              ...state,\n              addedItems: newItems,\n              total: newTotal\n          }\n      }\n      else {\n          addedItem.quantity -= 1\n          let newTotal = stotalItems - addedItem.productPrice\n          let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal)) ;\n          \n          return{\n              ...state,\n              total: newTotal\n          }\n      }\n      \n  }\n    return state;\n}\n  \nexport default productReducer;"]},"metadata":{},"sourceType":"module"}