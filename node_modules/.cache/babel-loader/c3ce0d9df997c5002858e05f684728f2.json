{"ast":null,"code":"import productLists from \"../pages/data\";\nconst initialState = {\n  products: productLists,\n  product: [{\n    productId: 0,\n    productDesc: \"\",\n    productPrice: \"\",\n    productName: \"\",\n    productMaterial: \"\"\n  }],\n  basket: [],\n  total: 0\n};\n\nconst productReducer = (state = initialState, action) => {\n  if (action.type === 'ADD_ITEM') {\n    let allItems = JSON.parse(localStorage.getItem('items'));\n    console.log(state.total, \"allitem\"); //console.log(\"action\", action.product.productId)\n\n    let addedItem = state.products.find(item => item.productId === action.product.productId);\n    let existed_item = allItems.find(item => item.productId === action.product.productId);\n\n    if (existed_item) {\n      console.log(\"ada\");\n      addedItem.quantity += 1;\n      return { ...state,\n        total: state.total + addedItem.productPrice\n      };\n    } else {\n      console.log(\"g ada item\");\n      addedItem.quantity = 1; //calculating the total\n\n      let newTotal = state.total + addedItem.productPrice;\n      return { ...state,\n        basket: [...state.basket, addedItem],\n        total: newTotal\n      };\n    } // return {\n    //     ...state,\n    //     basket: [ ...state.basket, action.product\n    //     ]\n    // }\n\n  }\n\n  if (action.type === 'DEL_ITEM') {\n    const filteredProduct = state.basket.filter(product => String(product.productId) !== String(action.products.productId));\n    return { ...state,\n      basket: filteredProduct\n    };\n  }\n\n  return state;\n};\n\nexport default productReducer;","map":{"version":3,"sources":["/Users/firdausmac/Documents/FULLSTACK/CARI GITHUB/small-project2/src/reducers/productReducer.js"],"names":["productLists","initialState","products","product","productId","productDesc","productPrice","productName","productMaterial","basket","total","productReducer","state","action","type","allItems","JSON","parse","localStorage","getItem","console","log","addedItem","find","item","existed_item","quantity","newTotal","filteredProduct","filter","String"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,eAAzB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAEF,YADO;AAEjBG,EAAAA,OAAO,EAAC,CAAC;AACLC,IAAAA,SAAS,EAAG,CADP;AAELC,IAAAA,WAAW,EAAG,EAFT;AAGLC,IAAAA,YAAY,EAAG,EAHV;AAILC,IAAAA,WAAW,EAAG,EAJT;AAKLC,IAAAA,eAAe,EAAG;AALb,GAAD,CAFS;AASjBC,EAAAA,MAAM,EAAC,EATU;AAUjBC,EAAAA,KAAK,EAAG;AAVS,CAArB;;AAaA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AACrD,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EACA;AACE,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACF,KAAlB,EAAyB,SAAzB,EAFF,CAGE;;AACA,QAAIY,SAAS,GAAGV,KAAK,CAACV,QAAN,CAAeqB,IAAf,CAAoBC,IAAI,IAAGA,IAAI,CAACpB,SAAL,KAAmBS,MAAM,CAACV,OAAP,CAAeC,SAA7D,CAAhB;AACA,QAAIqB,YAAY,GAAEV,QAAQ,CAACQ,IAAT,CAAcC,IAAI,IAAIA,IAAI,CAACpB,SAAL,KAAmBS,MAAM,CAACV,OAAP,CAAeC,SAAxD,CAAlB;;AAEA,QAAGqB,YAAH,EACG;AACEL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACCC,MAAAA,SAAS,CAACI,QAAV,IAAsB,CAAtB;AACC,aAAM,EACH,GAAGd,KADA;AAEFF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcY,SAAS,CAAChB;AAF7B,OAAN;AAIJ,KARH,MASO;AACFc,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACCC,MAAAA,SAAS,CAACI,QAAV,GAAqB,CAArB,CAFC,CAGD;;AACA,UAAIC,QAAQ,GAAGf,KAAK,CAACF,KAAN,GAAcY,SAAS,CAAChB,YAAvC;AAEA,aAAM,EACF,GAAGM,KADD;AAEFH,QAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkBa,SAAlB,CAFN;AAGFZ,QAAAA,KAAK,EAAGiB;AAHN,OAAN;AAMH,KA5BL,CAiCE;AACA;AACA;AACA;AACA;;AACD;;AACD,MAAId,MAAM,CAACC,IAAP,KAAgB,UAApB,EACA;AACE,UAAMc,eAAe,GAAGhB,KAAK,CAACH,MAAN,CACvBoB,MADuB,CAEtB1B,OAAO,IAAI2B,MAAM,CAAC3B,OAAO,CAACC,SAAT,CAAN,KAA8B0B,MAAM,CAACjB,MAAM,CAACX,QAAP,CAAgBE,SAAjB,CAFzB,CAAxB;AAIA,WAAO,EACH,GAAGQ,KADA;AAEHH,MAAAA,MAAM,EAAEmB;AAFL,KAAP;AAID;;AACD,SAAOhB,KAAP;AACH,CArDD;;AAuDA,eAAeD,cAAf","sourcesContent":["import productLists from \"../pages/data\"\n\nconst initialState = {\n    products: productLists,\n    product:[{\n        productId : 0,\n        productDesc : \"\",\n        productPrice : \"\",\n        productName : \"\",\n        productMaterial : \"\",\n    }],\n    basket:[],\n    total : 0,\n  }\n\nconst productReducer = (state = initialState, action) => {\n    if (action.type === 'ADD_ITEM') \n    {\n      let allItems = JSON.parse(localStorage.getItem('items'))\n      console.log(state.total, \"allitem\")\n      //console.log(\"action\", action.product.productId)\n      let addedItem = state.products.find(item=> item.productId === action.product.productId)\n      let existed_item= allItems.find(item => item.productId === action.product.productId) \n\n      if(existed_item)\n         {\n           console.log(\"ada\")\n            addedItem.quantity += 1 \n             return{\n                ...state,\n                 total: state.total + addedItem.productPrice \n                  }\n        }\n         else{\n           console.log(\"g ada item\")\n            addedItem.quantity = 1;\n            //calculating the total\n            let newTotal = state.total + addedItem.productPrice \n            \n            return{\n                ...state,\n                basket: [...state.basket, addedItem],\n                total : newTotal\n            }\n            \n        }\n\n\n\n\n      // return {\n      //     ...state,\n      //     basket: [ ...state.basket, action.product\n      //     ]\n      // }\n    }\n    if (action.type === 'DEL_ITEM') \n    {\n      const filteredProduct = state.basket\n      .filter(\n        product => String(product.productId) !== String(action.products.productId)\n      )\n      return {\n          ...state,\n          basket: filteredProduct\n      }\n    }\n    return state;\n}\n  \nexport default productReducer;"]},"metadata":{},"sourceType":"module"}