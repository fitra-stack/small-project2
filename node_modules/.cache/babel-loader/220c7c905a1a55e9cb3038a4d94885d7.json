{"ast":null,"code":"import productLists from \"../pages/data\";\nconst initialState = {\n  products: productLists,\n  product: [{\n    productId: 0,\n    productDesc: \"\",\n    productPrice: \"\"\n  }],\n  basket: []\n};\n\nconst productReducer = (state = initialState, action) => {\n  if (action.type === 'ADD_ITEM') {\n    localStorage.setItem('items', JSON.stringify(basket));\n    return { ...state,\n      basket: [...state.basket, action.product]\n    };\n  }\n\n  if (action.type === 'DEL_ITEM') {\n    const filteredProduct = state.basket.filter(product => String(product.productId) !== String(action.products.productId));\n    return { ...state,\n      basket: filteredProduct\n    };\n  }\n\n  return state;\n};\n\nexport default productReducer;","map":{"version":3,"sources":["/Users/firdausmac/Documents/FULLSTACK/CARI GITHUB/small-project2/src/reducers/productReducer.js"],"names":["productLists","initialState","products","product","productId","productDesc","productPrice","basket","productReducer","state","action","type","localStorage","setItem","JSON","stringify","filteredProduct","filter","String"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,eAAzB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAEF,YADO;AAEjBG,EAAAA,OAAO,EAAC,CAAC;AACLC,IAAAA,SAAS,EAAG,CADP;AAELC,IAAAA,WAAW,EAAG,EAFT;AAGLC,IAAAA,YAAY,EAAG;AAHV,GAAD,CAFS;AAOjBC,EAAAA,MAAM,EAAC;AAPU,CAArB;;AAUA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACrD,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EACA;AACEC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeR,MAAf,CAA9B;AACA,WAAO,EACH,GAAGE,KADA;AAEHF,MAAAA,MAAM,EAAE,CAAE,GAAGE,KAAK,CAACF,MAAX,EAAmBG,MAAM,CAACP,OAA1B;AAFL,KAAP;AAKD;;AACD,MAAIO,MAAM,CAACC,IAAP,KAAgB,UAApB,EACA;AACE,UAAMK,eAAe,GAAGP,KAAK,CAACF,MAAN,CACvBU,MADuB,CAEtBd,OAAO,IAAIe,MAAM,CAACf,OAAO,CAACC,SAAT,CAAN,KAA8Bc,MAAM,CAACR,MAAM,CAACR,QAAP,CAAgBE,SAAjB,CAFzB,CAAxB;AAIA,WAAO,EACH,GAAGK,KADA;AAEHF,MAAAA,MAAM,EAAES;AAFL,KAAP;AAID;;AACD,SAAOP,KAAP;AACH,CAtBD;;AAwBA,eAAeD,cAAf","sourcesContent":["import productLists from \"../pages/data\"\n\nconst initialState = {\n    products: productLists,\n    product:[{\n        productId : 0,\n        productDesc : \"\",\n        productPrice : \"\",\n    }],\n    basket:[],\n  }\n\nconst productReducer = (state = initialState, action) => {\n    if (action.type === 'ADD_ITEM') \n    {\n      localStorage.setItem('items', JSON.stringify(basket));\n      return {\n          ...state,\n          basket: [ ...state.basket, action.product\n          ]\n      }\n    }\n    if (action.type === 'DEL_ITEM') \n    {\n      const filteredProduct = state.basket\n      .filter(\n        product => String(product.productId) !== String(action.products.productId)\n      )\n      return {\n          ...state,\n          basket: filteredProduct\n      }\n    }\n    return state;\n}\n  \nexport default productReducer;"]},"metadata":{},"sourceType":"module"}