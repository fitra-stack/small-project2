{"ast":null,"code":"import productLists from \"../pages/data\";\nconst initialState = {\n  products: productLists,\n  product: [{\n    productId: 0,\n    productDesc: \"\",\n    productPrice: \"\",\n    productName: \"\",\n    productMaterial: \"\"\n  }],\n  basket: [],\n  total: 0,\n  quantity: 0\n};\n\nconst productReducer = (state = initialState, action) => {\n  if (action.type === 'ADD_ITEM') {\n    let allItems = JSON.parse(localStorage.getItem('items'));\n    console.log(state.basket, \"allitemss\"); //console.log(\"action\", action.product.productId)\n\n    let addedItem = state.products.find(item => item.productId === action.product.productId);\n    let existed_item = allItems.find(item => item.productId === action.product.productId);\n\n    if (existed_item) {\n      console.log(\"ada\");\n      addedItem.quantity += 1;\n      return { ...state,\n        total: state.total + addedItem.productPrice\n      };\n    } else {\n      console.log(\"g ada item\");\n      addedItem.quantity = 1; //calculating the total\n\n      let newTotal = state.total + addedItem.productPrice;\n      return { ...state,\n        basket: [...state.basket, addedItem],\n        total: newTotal\n      };\n    } // return {\n    //     ...state,\n    //     basket: [ ...state.basket, action.product\n    //     ]\n    // }\n\n  }\n\n  if (action.type === 'DEL_ITEM') {\n    let allItems = JSON.parse(localStorage.getItem('items'));\n    let totalItems = JSON.parse(localStorage.getItem('totalItems'));\n    let itemToRemove = allItems.find(item => action.productId === item.productId);\n    let newItems = allItems.filter(item => action.productId !== item.productId);\n    let updateItems = localStorage.setItem('items', JSON.stringify(newItems));\n    let newTotal = totalItems - itemToRemove.productPrice * itemToRemove.quantity;\n    let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal));\n    return { ...state,\n      basket: newItems,\n      total: newTotal\n    };\n  }\n\n  if (action.type === 'ADD_QUANTITY') {\n    let allItems = JSON.parse(localStorage.getItem('items'));\n    let totalItems = JSON.parse(localStorage.getItem('totalItems'));\n    let addedItem = allItems.find(item => item.productId === action.productId);\n    addedItem.quantity += 1;\n    let qtyUpdate = Array(addedItem);\n    let updateItems = allItems.map(obj => qtyUpdate.find(o => o.productId === obj.productId) || obj);\n    let localstorageItems = localStorage.setItem('items', JSON.stringify(updateItems));\n    let newTotal = totalItems + addedItem.productPrice;\n    let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal));\n    return { ...state,\n      total: newTotal\n    };\n  }\n\n  if (action.type === 'SUB_QUANTITY') {\n    let allItems = JSON.parse(localStorage.getItem('items'));\n    let addedItem = allItems.find(item => item.productId === action.productId);\n    let totalItems = JSON.parse(localStorage.getItem('totalItems')); //if the qt == 0 then it should be removed\n\n    if (addedItem.quantity === 1) {\n      let newItems = allItems.filter(item => item.productId !== action.productId);\n      let updateItems = localStorage.setItem('items', JSON.stringify(newItems));\n      let newTotal = totalItems - addedItem.productPrice;\n      let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal));\n      return { ...state,\n        addedItems: newItems,\n        total: newTotal\n      };\n    } else {\n      addedItem.quantity -= 1;\n      let newTotal = totalItems - addedItem.productPrice;\n      let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal));\n      let qtyUpdate = Array(addedItem);\n      let updateItems = allItems.map(obj => qtyUpdate.find(o => o.productId === obj.productId) || obj);\n      let localstorageItems = localStorage.setItem('items', JSON.stringify(updateItems));\n      return { ...state,\n        total: newTotal\n      };\n    }\n  }\n\n  return state;\n};\n\nexport default productReducer;","map":{"version":3,"sources":["/Users/firdausmac/Documents/FULLSTACK/WEEK 9(mas ilham)/SMALL PROJECT/small-project2/src/reducers/productReducer.js"],"names":["productLists","initialState","products","product","productId","productDesc","productPrice","productName","productMaterial","basket","total","quantity","productReducer","state","action","type","allItems","JSON","parse","localStorage","getItem","console","log","addedItem","find","item","existed_item","newTotal","totalItems","itemToRemove","newItems","filter","updateItems","setItem","stringify","updateTotal","qtyUpdate","Array","map","obj","o","localstorageItems","addedItems"],"mappings":"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","sourcesContent":["import productLists from \"../pages/data\"\n\nconst initialState = {\n    products: productLists,\n    product:[{\n        productId : 0,\n        productDesc : \"\",\n        productPrice : \"\",\n        productName : \"\",\n        productMaterial : \"\",\n    }],\n    basket:[],\n    total : 0,\n    quantity : 0,\n  }\n\nconst productReducer = (state = initialState, action) => {\n    if (action.type === 'ADD_ITEM') \n    {\n      let allItems = JSON.parse(localStorage.getItem('items'))\n      console.log(state.basket, \"allitemss\")\n      //console.log(\"action\", action.product.productId)\n      let addedItem = state.products.find(item=> item.productId === action.product.productId)\n      let existed_item= allItems.find(item => item.productId === action.product.productId) \n\n      if(existed_item)\n         {\n           console.log(\"ada\")\n            addedItem.quantity += 1 \n             return{\n                ...state,\n                 total: state.total + addedItem.productPrice,\n                  }\n        }\n         else{\n           console.log(\"g ada item\")\n            addedItem.quantity = 1;\n            //calculating the total\n            let newTotal = state.total + addedItem.productPrice \n            \n            return{\n                ...state,\n                basket: [...state.basket, addedItem],\n                total : newTotal,\n            }\n            \n        }\n      // return {\n      //     ...state,\n      //     basket: [ ...state.basket, action.product\n      //     ]\n      // }\n    }\n    if (action.type === 'DEL_ITEM') \n    {\n        let allItems = JSON.parse(localStorage.getItem('items'))\n        let totalItems = JSON.parse(localStorage.getItem('totalItems'))\n        let itemToRemove= allItems.find(item=> action.productId === item.productId)\n        let newItems = allItems.filter(item=> action.productId !== item.productId)\n\n        let updateItems = localStorage.setItem('items', JSON.stringify(newItems)) ;\n\n        let newTotal = totalItems - (itemToRemove.productPrice * itemToRemove.quantity )\n        let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal)) ;\n        \n        return{\n          ...state,\n          basket: newItems,\n          total: newTotal\n      }\n    }\n    if(action.type === 'ADD_QUANTITY')\n    { \n        let allItems = JSON.parse(localStorage.getItem('items'))\n        let totalItems = JSON.parse(localStorage.getItem('totalItems'))\n        let addedItem = allItems.find(item=> item.productId === action.productId)\n          addedItem.quantity += 1 \n\n        let qtyUpdate = Array(addedItem)\n        let updateItems = allItems.map(obj => qtyUpdate.find(o => o.productId === obj.productId) || obj); \n        let localstorageItems = localStorage.setItem('items', JSON.stringify(updateItems)) ;\n          \n        let newTotal = totalItems + addedItem.productPrice\n        let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal)) ;\n          \n          return{\n              ...state,\n              total: newTotal\n          }\n    }\n    if(action.type=== 'SUB_QUANTITY'){  \n      let allItems = JSON.parse(localStorage.getItem('items'))\n      let addedItem = allItems.find(item=> item.productId === action.productId)\n\n      let totalItems = JSON.parse(localStorage.getItem('totalItems'))\n      //if the qt == 0 then it should be removed\n      if(addedItem.quantity === 1){\n          let newItems = allItems.filter(item=>item.productId !== action.productId)\n          let updateItems = localStorage.setItem('items', JSON.stringify(newItems)) ;\n          \n\n          let newTotal = totalItems - addedItem.productPrice\n          let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal)) ;\n          return{\n              ...state,\n              addedItems: newItems,\n              total: newTotal\n          }\n      }\n      else {\n          addedItem.quantity -= 1\n          let newTotal = totalItems - addedItem.productPrice\n          let updateTotal = localStorage.setItem('totalItems', JSON.stringify(newTotal)) ;\n\n          let qtyUpdate = Array(addedItem)\n          let updateItems = allItems.map(obj => qtyUpdate.find(o => o.productId === obj.productId) || obj); \n          let localstorageItems = localStorage.setItem('items', JSON.stringify(updateItems)) ;\n\n          return{\n              ...state,\n              total: newTotal\n          }\n      }\n      \n  }\n    return state;\n}\n  \nexport default productReducer;"]},"metadata":{},"sourceType":"module"}